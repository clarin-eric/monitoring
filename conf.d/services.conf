apply Service "ping4" {
    import "generic-service"

    check_command = "ping4"

    assign where host.address
}

apply Service "ping6" {
    import "generic-service"

    check_command = "ping6"

    assign where host.address6
}

apply Service "ssh" {
    import "generic-service"

    check_command = "ssh"

    assign where (host.address || host.address6) && host.vars.os == "Linux"
}

apply Service for (http_vhost => config in host.vars.http_vhosts) {
    import "generic-service"

    check_command = "http"

    vars += config
}

apply Service for (disk => config in host.vars.disks) {
    import "generic-service"

    check_command = "disk"

    vars += config
}

apply Service "icinga" {
    import "generic-service"

    check_command = "icinga"

    assign where host.name == NodeName
}

apply Service "load" {
    import "generic-service"

    check_command = "load"

    /* Used by the ScheduledDowntime apply rule in `downtimes.conf`. */
    vars.backup_downtime = "02:00-03:00"

    assign where host.name == NodeName
}

apply Service "procs" {
    import "generic-service"

    check_command = "procs"

    assign where host.name == NodeName
}

apply Service "swap" {
    import "generic-service"

    check_command = "swap"

    assign where host.name == NodeName
}

apply Service "users" {
    import "generic-service"

    check_command = "users"

    assign where host.name == NodeName
}

apply Service for (db => config in host.vars.pgsql_dbs)  {
    import "generic-service"

    check_command = "pgsql"

    vars += config
}

apply Service for (db => config in host.vars.mysql_dbs)  {
    import "generic-service"

    check_command = "mysql"

    vars += config
}

apply Service "ssl_cert " for (ssl_cert => config in host.vars.ssl_certs)  {
    import "generic-service"

    check_command = "ssl_cert"

    vars += config
}

apply Service "OAI-PMH-" for (endpoint => config in host.vars.oaipmh_endpoints) {
    import "generic-service"

    check_command = "oaipmh"

    vars += config
}

apply Service "SRU/CQL-" for (endpoint => config in host.vars.srucql_endpoints) {
    import "generic-service"

    check_command = "srucql"

    vars += config
}
